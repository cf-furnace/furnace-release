#!/bin/bash

set -e

# `go list` needs to know the platform we're targetting in order to generate
# the correct list. We know this is going to end up on linux.
export GOOS=linux

# ensure gosub is installed (this will recompile it only if necessary)
go get github.com/vito/gosub
go install github.com/vito/gosub

function sync_package() {
  bosh_pkg=${1}

  shift

  (
    set -e

    cd packages/${bosh_pkg}

    {
      cat spec | grep -v '# gosub'

      for package in $(gosub list "$@"); do
        repo=$(echo ${2} | cut -f1-3 -d/)
        if [ -d "../../src/${repo}/Godeps/_workspace/src/${package}" ]; then
          package="${repo}/Godeps/_workspace/src/${package}"
        fi
        echo ${package} | sed -e 's/\(.*\)/  - \1\/*.go # gosub/g'
        if ls ../../src/${package}/*.s >/dev/null 2>&1; then
          echo ${package} | sed -e 's/\(.*\)/  - \1\/*.s # gosub/g'
        fi
      done
    } > spec.new

    mv spec.new spec
  )
}

sync_package nsync -app github.com/cloudfoundry-incubator/nsync/cmd/... &
sync_package tps -app github.com/cloudfoundry-incubator/tps/cmd/... &
sync_package logging-agent -app github.com/cf-furnace/loggingAgent/cmd/... &
sync_package route_emitter -app github.com/cf-furnace/route-emitter/cmd/... &

wait

git diff --name-only packages/*/spec
